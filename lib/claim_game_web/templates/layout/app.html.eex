<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>The Claim Game (by BeeGees)</title>
    <link rel="stylesheet" href="<%= Routes.static_path(@conn, "/css/app.css") %>"/>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.9.0/css/all.min.css" integrity="sha256-UzFD2WYH2U1dQpKDjjZK72VtPeWP50NoJjd26rnAdUI=" crossorigin="anonymous" />

    <link href="https://fonts.googleapis.com/css?family=Roboto&display=swap" rel="stylesheet">

    <script src="https://cdnjs.cloudflare.com/ajax/libs/paper.js/0.12.2/paper-full.min.js" integrity="sha256-xT9jNx8tzepeeLwMeN985td1KYlkEOZJ/ReF9XMLoMU=" crossorigin="anonymous"></script>

    <style>
      * {
        font-family: 'Roboto', sans-serif;
      }

      html, body {
          height: 100%;
      }

      /* Scale canvas with resize attribute to full size */
      canvas[resize] {
        width: 100%;
        height: 100%;
      }

      canvas {
        //border: 10px solid black;
      }

      img {
        display: none;
      }
    </style>
  </head>
  <body>
    <canvas id="game-canvas" resize="true" keepalive="true">
    </canvas>
    <img id="board" src="images/board.jpg">
    <img id="board" src="images/board.jpg">
    <div id='testdiv' style='height: 1in; left: -100%; position: absolute; top: -100%; width: 1in;'></div>
    <script type="text/javascript" src="<%= Routes.static_path(@conn, "/js/app.js") %>"></script>

    <!-- Define inlined PaperScript associate it with myCanvas -->
    <script type="text/paperscript" canvas="game-canvas">
      var raster = new Raster('board');
      //raster.position = view.center
      raster.bounds.left = 0
      raster.bounds.top = 0;

      var myCircle = new Path.Circle(new Point(100, 100), 50);
      myCircle.fillColor = 'black';

      window.raster = raster;
      window.circle = myCircle;

      ///// THE DICE

      var diceSize = 100;

      var diceFrame = new Path.Rectangle(
          new Rectangle(new Point(0, 0), new Size(diceSize, diceSize)),
          new Size(10, 10));
      diceFrame.fillColor = 'white';
      diceFrame.strokeColor = 'black';
      diceFrame.strokeWidth = 2;

      var diceD0 = new Path.Circle(
          new Point(50, 50),
          diceSize / 10);
      diceD0.fillColor = 'black';

      var diceD1 = diceD0.clone();
      diceD1.position = new Point(20, 20);
      var diceD2 = diceD0.clone();
      diceD2.position = new Point(20, 50);
      var diceD3 = diceD0.clone();
      diceD3.position = new Point(20, 80);
      var diceD4 = diceD0.clone();
      diceD4.position = new Point(80, 20);
      var diceD5 = diceD0.clone();
      diceD5.position = new Point(80, 50);
      var diceD6 = diceD0.clone();
      diceD6.position = new Point(80, 80);

      var dice = new Group([
        diceFrame,
        diceD0, diceD1, diceD2, diceD3, diceD4, diceD5, diceD6
      ]);

      function drawDice(n) {
        [diceD0, diceD1, diceD2, diceD3, diceD4, diceD5, diceD6].forEach(function(d) {
          d.visible = false;
        })

        if (n == 1) {
          [diceD0].forEach(function(d) {
            d.visible = true;
          })
        } else if (n == 2) {
          [diceD1, diceD6].forEach(function(d) {
            d.visible = true;
          })
        } else if (n == 3) {
          [diceD0, diceD1, diceD6].forEach(function(d) {
            d.visible = true;
          })
        } else if (n == 4) {
          [diceD1, diceD3, diceD4, diceD6].forEach(function(d) {
            d.visible = true;
          })
        } else if (n == 5) {
          [diceD0, diceD1, diceD3, diceD4, diceD6].forEach(function(d) {
            d.visible = true;
          })
        } else if (n == 6) {
          [diceD1, diceD2, diceD3, diceD4, diceD5, diceD6].forEach(function(d) {
            d.visible = true;
          })
        }
      }

      window.tween = dice.tweenTo(
        { position: new Point(500, 500) },
        { duration: 1000, start: false }
      );

      window.tween.start();

      window.dice = dice;

      var diceValue = 1;
      drawDice(diceValue);

      var diceTime = 0;

      function rollDice(current) {
        var n = Math.floor((Math.random() * 6) + 1);
        if (n == current) {
          return rollDice(current);
        } else {
          return n;
        }
      }

      dice.visible = false;

      function onFrame(event) {
        // the number of times the frame event was fired:
        //console.log(event.count);

        // The total amount of time passed since
        // the first frame event in seconds:
        //console.log(event.time);

        //if (event.time - diceTime > 0.2) {
        //  diceTime = event.time;
        //  diceValue = rollDice(diceValue);
        //  drawDice(diceValue);
        //}

        // The time passed in seconds since the last frame event:
        //console.log(event.delta);
        //dice.position += 1;
      }
    </script>
  </body>
</html>
